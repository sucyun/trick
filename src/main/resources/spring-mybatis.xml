<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- 配置 druid 可视化监控图 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="mergeSql" value="true" />
		<property name="slowSqlMillis" value="10000" />
		<property name="logSlowSql" value="true" />
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${local_driver}" />
		<property name="url" value="${local_url}" />
		<property name="username" value="${local_username}" />
		<property name="password" value="${local_password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"/>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"/>
		<!-- 连接池最大空闲,这个属性的setMaxIdle 方法已经过时,不建议使用 -->
		<!-- <property name="maxIdle" value="${maxIdle}"></property> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"/>
		<property name="filters" value="stat" />
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
		<!-- 配置druid 监控 -->
		<!-- 		<property name="proxyFilters"> -->
		<!-- 			<list> -->
		<!-- 				<ref bean="stat-filter" /> -->
		<!-- 			</list> -->
		<!-- 		</property> -->
	</bean>


	<bean id="dataSourceSpringboot" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${route_driver}" />
		<property name="url" value="${route_url}" />
		<property name="username" value="${route_username}" />
		<property name="password" value="${route_password}" />
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<property name="filters" value="stat" />
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
	</bean>

	<bean id="dataSourceSpringboot_local" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${local_springboot_driver}" />
		<property name="url" value="${local_springboot_url}" />
		<property name="username" value="${local_springboot_username}" />
		<property name="password" value="${local_springboot_password}" />
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<property name="filters" value="stat" />
		<property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
	</bean>

	<!-- Spring 整合 MyBatis,不需要Mybatis配置映射文件,由Mybatis提供支持 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceSpringboot_local" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/trick/biz/mvc/*/dao/mapping/*.xml"/>
		<property name="typeAliasesPackage" value="com.trick.biz.mvc.*.model" />
		<!-- mybatis 分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
						</value>
					</property>
					<!-- 4.0.0以后版本可以不设置该参数 -->
					<!-- 					<property name="dialect" value="mysql" /> -->
					<!-- 该参数默认为false -->
					<!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
					<!-- 和startPage中的pageNum效果一样 -->
					<!-- <property name="offsetAsPageNum" value="true"/> -->
					<!-- 该参数默认为false -->
					<!-- 设置为true时，使用RowBounds分页会进行count查询 -->
					<!-- <property name="rowBoundsWithCount" value="true"/> -->
					<!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
					<!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
					<!-- <property name="pageSizeZero" value="true"/> -->
					<!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
					<!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
					<!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
					<!-- <property name="reasonable" value="false"/> -->
					<!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
					<!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
					<!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
					<!-- 不理解该含义的前提下，不要随便复制该配置 -->
					<!-- <property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;"/> -->
					<!-- 支持通过Mapper接口参数来传递分页参数 -->
					<!-- <property name="supportMethodsArguments" value="false"/> -->
					<!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
					<!-- <property name="returnPageInfo" value="none"/> -->
				</bean>
			</array>
		</property>
		<!-- mybatis 开启缓存支持 -->
		<!-- 		<property name="configurationProperties"> -->
		<!-- 			<props> -->
		<!-- 				<prop key="cacheEnabled">true</prop> -->
		<!-- 				查询时，关闭关联对象即时加载以提高性能 -->
		<!-- 				<prop key="lazyLoadingEnabled">true</prop> -->
		<!-- 				设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
		<!-- 				<prop key="aggressiveLazyLoading">false</prop> -->
		<!-- 				对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<!-- 				<prop key="multipleResultSetsEnabled">true</prop> -->
		<!-- 				允许使用列标签代替列名 -->
		<!-- 				<prop key="useColumnLabel">true</prop> -->
		<!-- 				允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
		<!-- 				<prop key="useGeneratedKeys">true</prop> -->
		<!-- 				给予被嵌套的resultMap以字段-属性的映射支持 -->
		<!-- 				<prop key="autoMappingBehavior">FULL</prop> -->
		<!-- 				对于批量更新操作缓存SQL以提高性能 -->
		<!-- 				<prop key="defaultExecutorType">BATCH</prop> -->
		<!-- 				数据库超过25000秒仍未响应则超时 -->
		<!-- 				<prop key="defaultStatementTimeout">25000</prop> -->
		<!-- 			</props> -->
		<!-- 		</property> -->
	</bean>
	<bean id="sqlSessionFactorySpringboot" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceSpringboot" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/trick/biz/mvc/test/dao/mapping/*.xml"/>
		<property name="typeAliasesPackage" value="com.trick.biz.mvc.test.model" />
		<!-- mybatis 分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<bean id="sqlSessionFactorySpringboot_local" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceSpringboot_local" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/trick/biz/mvc/test/dao/mapping/*.xml"/>
		<property name="typeAliasesPackage" value="com.trick.biz.mvc.test.model" />
		<!-- mybatis 分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<bean id="masterAndSlaveSqlSessionTemplate" class="com.trick.web.db.jdbc.DynamicSqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactorySpringboot_local" />
		<property name="targetSqlSessionFactorys">
			<map>
				<entry value-ref="sqlSessionFactorySpringboot" key="dataSource_rout" />
				<entry value-ref="sqlSessionFactorySpringboot_local" key="dataSource_local" />
			</map>
		</property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.trick.biz.mvc.*.dao" />
		<!-- 		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactorySpringboot"></property> -->
		<property name="sqlSessionTemplateBeanName" value="masterAndSlaveSqlSessionTemplate"/>
	</bean>
	<bean id="dataSourceAspect" class="com.trick.web.db.jdbc.DataSourceAspect"/>
	<aop:config>
		<aop:aspect ref="dataSourceAspect">
			<!-- 拦截所有service方法 -->
			<aop:pointcut id="dataSourcePointcut" expression="execution(public * com.trick.biz.mvc.*.service.*.*(..))" />
			<!-- 			<aop:pointcut id="dataSourcePointcut" expression="execution(public * com.trick.biz.mvc.test.service.*.get(..))" /> -->
			<aop:before pointcut-ref="dataSourcePointcut" method="intercept" />
		</aop:aspect>
	</aop:config>
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>  