<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.name.mvc.admin.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.name.mvc.admin.model.Admin" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createby" property="createby" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, password, createtime, createby, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
  	update sys_admin set status = 0
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.name.mvc.admin.model.Admin" >
    insert into sys_admin (id, code, name, 
      password, createtime, createby, 
      status)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{createby,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.name.mvc.admin.model.Admin" >
    insert into sys_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createby != null" >
        createby,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.name.mvc.admin.model.Admin" >
    update sys_admin
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createby != null" >
        createby = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.name.mvc.admin.model.Admin" >
    update sys_admin
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createby = #{createby,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 登录 -->
  <select id="login" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from sys_admin
    where name = #{name,jdbcType=VARCHAR} and  password = #{password,jdbcType=VARCHAR} 
  </select>
  
  <!-- 根据管理员名称获取管理员数据 -->
  <select id="selectPrivilegesByAdmName" resultMap="AdminInfo" parameterType="java.lang.String">
  	SELECT
		s_a.id adm_id,s_a.code adm_code,s_a.name adm_name,s_a.password,s_a.createtime adm_createtime,s_a.createby adm_createby,s_a.status adm_status
	FROM sys_admin s_a
	LEFT JOIN sys_admin_to_role a_r on s_a.id = a_r.adminid
    where name = #{admName,jdbcType=VARCHAR}
  </select>
  <!-- 根据管理员名称获取管理员拥有的角色 -->
  <select id="getRoleListByAdminName" resultMap="RoleResult" parameterType="java.lang.String" >
  	SELECT
  		s_r.id,s_r.code,s_r.name,s_r.createtime,s_r.createby,s_r.status
<!-- 		s_r.id role_id,s_r.code role_code,s_r.name role_name,s_r.createtime role_createtime,s_r.createby role_createby,s_r.status role_status -->
	FROM sys_role s_r
	LEFT JOIN sys_admin_to_role a_r on s_r.id = a_r.adminid
	where s_r.name = #{admName,jdbcType=VARCHAR}
  </select>
  <!-- 根据拥有的所有角色，获取所有权限 -->
  <select id="getPrivilegeListByRole" resultType="com.name.mvc.admin.model.Privilege" parameterType="java.lang.Integer" >
  	SELECT 
  		s_p.id,s_p.parentid parentId,s_p.code,s_p.name,s_p.url,s_p.explan,s_p.createtime,s_p.createby,s_p.status
<!--   		s_p.id pri_id,s_p.parentid,s_p.code pri_code,s_p.name pri_name,s_p.url,s_p.explan,s_p.createtime pri_createtime,s_p.createby pri_createby,s_p.status pri_status -->
	FROM sys_privilege s_p
	LEFT JOIN sys_role_to_privilege r_p on s_p.id = r_p.privilegeid
	WHERE r_p.roleid = #{roleid,jdbcType=INTEGER}
	GROUP BY s_p.id
	order by s_p.parentid asc,createtime asc
	
  </select>
  <select id="findAll" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from sys_admin sa
<!--     <where> -->
<!-- 		<if test="studentName!=null and studentName!='' "> -->
<!-- 			sp.name LIKE CONCAT(CONCAT('%', #{name}),'%') -->
<!-- 		</if> -->
<!-- 		<if test="studentSex!= null and studentSex!= '' "> -->
<!-- 			AND ST.STUDENT_SEX = #{studentSex} -->
<!-- 		</if> -->
<!-- 	</where> -->
	limit #{begin,jdbcType=INTEGER}, #{pagesize,jdbcType=INTEGER}
  </select>
  
  
    <!-- 自定义 -->
  	<resultMap type="com.name.mvc.admin.model.Role" id="RoleResult">
	  <id column="id" property="id"  jdbcType="INTEGER" />
      <result column="code" property="code"  jdbcType="VARCHAR" />
   	  <result column="name" property="name"  jdbcType="VARCHAR" />
      <result column="createtime" property="createTime"  jdbcType="TIMESTAMP" />
      <result column="createby" property="createBy" jdbcType="VARCHAR" />
      <result column="status" property="status"  jdbcType="INTEGER" />
<!-- 	  <collection property="privilege" ofType="com.name.mvc.admin.model.Privilege" resultMap="privilegeResult"/> -->
	</resultMap>
	
	<resultMap type="com.name.mvc.admin.model.Privilege" id="PrivilegeResult">
		<id column="pri_id" property="id" jdbcType="INTEGER" />
      	<result column="parentid" property="parentId" jdbcType="INTEGER" />
        <result column="pri_code" property="code" jdbcType="VARCHAR" />
   	    <result column="pri_name" property="name" jdbcType="VARCHAR" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="explan" property="explan" jdbcType="VARCHAR" />
        <result column="pri_createtime" property="createtime" jdbcType="TIMESTAMP" />
        <result column="pri_createby" property="createby" jdbcType="VARCHAR" />
        <result column="pri_status" property="status" jdbcType="INTEGER" />
	</resultMap>
  <resultMap type="com.name.mvc.admin.model.Admin" id="AdminInfo">
    <id column="adm_id" property="id" jdbcType="INTEGER" />
    <result column="adm_code" property="code" jdbcType="VARCHAR" />
    <result column="adm_name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="adm_createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="adm_createby" property="createby" jdbcType="VARCHAR" />
    <result column="adm_status" property="status" jdbcType="INTEGER" />
<!--     <collection column="role_id" property="role" ofType="com.name.mvc.admin.model.Role"> -->
<!--     	<id property="id" column="role_id" jdbcType="INTEGER" /> -->
<!--     </collection> -->
  </resultMap>
  
  
</mapper>